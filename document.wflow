<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>444.7</string>
	<key>AMApplicationVersion</key>
	<string>2.8</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}	-- Clean up input	set input to first item of input	set searchQuery to replaceChars(input, "@", "%40")	set searchQuery to replaceChars(searchQuery, " ", "+")		-- Create new URL for GET request	set newURL to "https://supportal2.blendle.io/search?query=" &amp; searchQuery		-- Find the open Supportal tab and make the GET request	tell application "Google Chrome"		tell its window 1			set tabNumber to count of tabs			set tabList to every tab			set reversedTabList to reverse of tabList						-- Loop through all tabs and check which Supportal tab is already open			repeat with theTab in reversedTabList				set theURL to the URL of theTab				if {theURL starts with "https://supportal2.blendle.io"} then					set URL of tab tabNumber to newURL					exit repeat				end if				set tabNumber to {tabNumber - 1}			end repeat			-- If Supportal is not open in any tab, open a new tab			if {tabNumber is equal to [0]} then				set newTab to make new tab at end of tabs				set URL of newTab to newURL				set tabNumber to count of tabs			end if		end tell	end tell	pageIsLoaded(tabNumber)	getUserInfo(input, tabNumber, theTab)	set the clipboard to inputend run-- Replaces certain characters in a given stringon replaceChars(mailAddress, toReplace, replaceWith)	set AppleScript's text item delimiters to toReplace	set the itemList to every text item of mailAddress	set AppleScript's text item delimiters to replaceWith	set thisText to the itemList as string	set AppleScript's text item delimiters to ""	return thisTextend replaceChars-- Returns as soon as the webpage is loadedon pageIsLoaded(tabNumber)	tell application "Google Chrome"		display dialog "Page is being retrieved." buttons {"Ok, i'll wait..."} with icon file (my getIcon("waiting.icns")) giving up after 2		repeat until (loading of tab tabNumber of window 1 is false)			delay 0.1		end repeat	end tellend pageIsLoaded-- Returns a complete string with only an 's' at the end if the preceding variable is not 1on isItSingle(v, str1, str2)	set totalString to v &amp; " " &amp; str1	if v is "1" then		set totalString to totalString &amp; " " &amp; str2	else		set totalString to totalString &amp; "s " &amp; str2	end if	return totalStringend isItSingle-- Returns a path to the given iconon getIcon(icon)	set userName to (do shell script "echo $USER")	set pathToIcon to "Users:" &amp; userName &amp; ":Library:Services:SupportalSupport.workflow:Contents:Resources:" &amp; icon	return pathToIconend getIcon-- Checks if the user is in any way active or has tangible assets in its accounton checkIfUserIsActive(numOfReads, totalTransactions, activeSub)	if numOfReads as integer &gt; 10 then		return true	else if totalTransactions &gt; 0 then		return true	else if activeSub as integer &gt; 0 then		return true	else		return false	end ifend checkIfUserIsActive

-- Returns the date with the month spelled out and no preceding '0' before the dayon datify(inputDate)	set d to text 1 thru 2 of inputDate	set m to text 4 thru 5 of inputDate	set y to text 7 thru 10 of inputDate	
	-- Removes the occasional '0' before the date	if d starts with "0" then		set d to text 2 thru -1 of d	end if	
	-- Spells out the month	set allMonths to {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"}	set m to item (m as number) of allMonths
		return d &amp; " " &amp; m &amp; " " &amp; yend datify-- Collects all user info on the page and displays a summary in a dialog boxon getUserInfo(input, tabNumber, theTab)	tell application "Google Chrome"		-- Get all the info on the page and sort it into a list		set webpage to execute theTab javascript "document.body.innerText;"		set allLines to paragraphs of webpage		if item 3 of allLines starts with "Found this user via direct match" then			set allLines to items 1 thru 2 of allLines &amp; items 4 thru -1 of allLines		end if				-- Check if the user was found		if item 3 of allLines is equal to "Results" then			display dialog "Sorry, no user was found searching for '" &amp; input &amp; "'." with icon file (my getIcon("notFound.icns"))
		else if length of allLines is 6 then			display dialog "Sorry, I have no idea why this happened. It just happens. Sometimes." with icon file (my getIcon("notAgain.icns"))		else			-- If a mail addres was used as input, check if it is the same as on the webpage			if "@" is in input then				set mail to item 9 of allLines				if mail ends with "unconfirmed" then					set mail to text 7 thru -13 of mail					set confOrUnconf to "USER IS NOT CONFIRMED\n"				else					set mail to text 7 thru -11 of mail					set confOrUnconf to ""				end if				if mail is not input then					display dialog "The mail address on this webpage is not the same as the one you entered!!!" with icon file (my getIcon("bigProblems.icns"))				end if			end if						-- Get the name and value of the account			set nameAndValue to item 4 of allLines			if nameAndValue ends with "Confirmed after 30 Nov 2017" then				set confOrUnconf to "Confirmed after 30 Nov 2017\n"				set lastChars to -30			else				set lastChars to -1			end if			set nameAndValue to text 2 thru lastChars of nameAndValue			set nameAndValue to my replaceChars(nameAndValue &amp; ")", " € ", " (€")						-- Loop over all lines of the webpage to find any relevant user information			set signUpDate to "I don't know..."			set totalTransactions to 0			repeat with l in allLines				-- Get number of articles read				if {l starts with "Reads"} then					set numOfReads to text 7 thru -1 of l				-- Check if the account is connected to Facebook				else if {l starts with "Facebook"} then					if l ends with "-" then						set isFacebook to "Not connected to Facebook"					else						set isFacebook to "Is connected to Facebook"					end if				-- Check the number of active and inactive subscriptions				else if {l ends with "(toggle)."} then					set wordList to words of l					set activeSub to item 1 of wordList					set inactiveSub to item 3 of wordList
				-- Count the number of times the user deposited money into its account				else if {l starts with "adyen-deposit"} then					set totalTransactions to totalTransactions + 1				-- Check when the user signed up				else if {l starts with "signup-gift" or l starts with "gift"} then					set signUpDate to text 1 thru 10 of lastLine					set signUpDate to my datify(signUpDate)				-- Check if the sign up date is already found				else if signUpDate is equal to "I don't know..." then					set lastLine to l
				end if			end repeat						-- Check if the account is in any way active			if my checkIfUserIsActive(numOfReads, totalTransactions, activeSub) is true then				set displayIcon to my getIcon("icon.icns")			else				set displayIcon to my getIcon("iconInactive.icns")			end if
						-- Display a short summary of the user information			display dialog nameAndValue &amp; "\nUser since " &amp; signUpDate &amp; "\n" &amp; confOrUnconf &amp; "\n" &amp; my isItSingle(numOfReads, "article", "read\n") &amp; my isItSingle(totalTransactions, "transaction", "\n") &amp; isFacebook &amp; "\n\n" &amp; my isItSingle(activeSub, "active subscription", "\n") &amp; my isItSingle(inactiveSub, "inactive subscription", "") buttons {"Stay here", "Let's check it out!"} default button "Let's check it out!" with icon file (displayIcon)			if button returned of result = "Let's check it out!" then				set active tab index of first window to tabNumber			end if		end if	end tellend getUserInfo</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>001F628C-02E2-42A2-9F71-597A2B08DA1A</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>D987AC10-A142-48E3-88B6-6C6788D283A1</string>
				<key>UUID</key>
				<string>5A3DBEC7-2F9C-409E-9191-DCDFD2F55271</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>580.500000:857.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceApplicationBundleID</key>
		<string>com.google.Chrome</string>
		<key>serviceApplicationPath</key>
		<string>/Applications/Google Chrome.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
